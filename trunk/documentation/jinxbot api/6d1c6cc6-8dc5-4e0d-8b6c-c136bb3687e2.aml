<?xml version="1.0" encoding="utf-8"?>
<topic id="6d1c6cc6-8dc5-4e0d-8b6c-c136bb3687e2" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <autoOutline />
      <para>JinxBot provides a series of plugin interfaces, or points of extension, 
      to make the end-user experience and the developer experience relatively pain-free
      and straightforward.  Among all points of extension, the goal is consistency and 
      security of the client's data.</para>
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>Command Handling</title>
      <content>
        <para>Plugins are able to handle commands via tokens, and commands are only handled
        once per issuance.  So, assuming a user might command:</para>
        <para>MyndFyre: !ban brew</para>
        <para>A first plugin might not handle the "ban" command at all, and so it 
        returns false and the plugin manager moves on.</para>
        <para>A second plugin might handle "ban", but it might only handle wildcard banning
        and it realizes that "brew" isn't a wildcard, and skips over it.  It would also 
        return false and the plugin manager moves on.</para>
        <para>A third plugin handles "ban" and recognizes that MyndFyre has the "M" role
        in the database.  (It may be hard-coded to respond to "M" as a Master operator, or
        it may be configured that way).  It executes the relevant ban operation if no 
        error condition exists, and returns true.</para>
        <para>For more information on developing command handling plugins, see 
        <link xlink:href="cb0d984f-960b-4fc3-93f1-f6ce70853db5">Command Handling</link>.</para>
      </content>
    </section>
    <section address="Section2">
    	<title>Database Providers</title>
    	<content>
    	<para>For more information about developing database provider plugins, see
    	<link xlink:href="d8a61e00-bbd6-4aeb-b60b-2bf17fa8e330">Database Providers</link>.</para>
    	</content>
    </section>
    <section address="Section2">
    	<title>Icon Providers</title>
    	<content>
    	<para>For more information about developing icon provider plugins, see
    	<link xlink:href="c2d3bd57-337a-4abf-9a8f-54fbf41243a3">Icon Providers</link>.</para>
    	</content>
    </section>
    <section address="Section2">
    	<title>Single-Client Plugins</title>
    	<content>
    	<para>For more information about developing general-purpose single-client plugins, see
    	<link xlink:href="9560d7aa-4c31-4a8c-b581-942f9154fd93">Single-Client Plugins</link>.</para>
    	</content>
    </section>
    <section address="Section2">
    	<title>Multi-Client Plugins</title>
    	<content>
    	<para>For more information about developing general-purpose multi-client plugins, see
    	<link xlink:href="3c7cc49a-4b7c-49e3-a69c-78c4c7658ec7">Multi-Client Plugins</link>.</para>
    	</content>
    </section>
    <relatedTopics>
    <link xlink:href="cb0d984f-960b-4fc3-93f1-f6ce70853db5">Command Handling</link>
    <link xlink:href="d8a61e00-bbd6-4aeb-b60b-2bf17fa8e330">Database Providers</link>
    <link xlink:href="c2d3bd57-337a-4abf-9a8f-54fbf41243a3">Icon Providers</link>
    <link xlink:href="9560d7aa-4c31-4a8c-b581-942f9154fd93">Single-Client Plugins</link>
    <link xlink:href="3c7cc49a-4b7c-49e3-a69c-78c4c7658ec7">Multi-Client Plugins</link>
    <link xlink:href="d4354478-42e9-4e18-8077-481b07f1c390">Sample Plugins</link>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>