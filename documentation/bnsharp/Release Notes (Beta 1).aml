<?xml version="1.0" encoding="utf-8"?>
<topic id="49dd0d10-eab4-4023-874a-a2193a06c018" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <autoOutline />
    </introduction>
    <section address="Section1">
      <title>New Features</title>
      <content>
    <list class="bullet">
        <listItem>Most appropriate classes has have WCF attributes applied to them and can be serialized with a DataContractSerializer. </listItem>
        <listItem>Added the ability to request user profiles.</listItem>
        <listItem>Friends support was added in this release</listItem>
        <listItem>BN# exposes a new event called EventExceptionThrown. The purpose of this event is to allow a host application to know when a specific plugin or feature set is causing an error and handle it gracefully. JinxBot will handle this condition, for example, by allowing the user to unload plugins on-demand if they are causing many exceptions. </listItem>
        <listItem>Additional clan support was added; BN# now understands and supports events for clan functions such as formation, chieftan change, new formation searching, and disband. Corresponding new functions include BeginClanCandidateSearch, InviteUsersToNewClan, RespondToNewClanInvitation, DisbandClan, and DesignateClanChieftan. Corresponding new events include ClanCandidatesSearchCompleted, ClanFormationCompleted, ClanFormationInvitationReceived, ClanDisbandCompleted, ClanInvitationReceived, ClanInvitationResponseReceived, ClanRemovalResponse, LeftClan, and ClanChangeChieftanCompleted. </listItem>
        <listItem>
            A new interface is supported for the ordering of packet parsing priority. This would allow, for example, a moderation plugin to require that ChatEvent packets are processed first (to receive UserJoined events). To support this functionality, implement the IPacketPriorityProvider interface in the BNSharp.Plugins namespace, and call BattleNetClient.RegisterCustomPacketPriorities/UnregisterCustomPacketPriorities.
        </listItem>
        <listItem>A demonstration project of a JinxBot plugin for adding MCP (Realm Server) support to BN# is available in the repository. It obeys some JinxBot contracts, but extends BN# to include handling for realm servers. </listItem>
        <listItem>A new method was added to BattleNetClient called CreateAccount.  If the login process fails, you can attempt to create the account by calling CreateAccount; it will use the information provided in the Settings object (this information can be changed dynamically at run-time). CreateAccount will result in the AccountCreated or AccountCreationFailed events to be raised; if AccountCreated is raised, the client will automatically log in.</listItem>
        <listItem>The client no longer automatically disconnects because of an account login failure. (CD key or versioning failure still results in an automatic disconnect). </listItem>
        <listItem>To support the no auto-disconnect policy, a new method was added to BattleNetClient called ContinueLogin(). This method allows the user to change the Settings object to modify the username and password of the desired login and then begin logging in again. </listItem>
    </list>
    </content></section>
    <section address="Section1">
      <title>Breaking Changes</title>
      <content>
    <list class="bullet">
        <listItem>By default, BNSharp requires support for .NET 3.0 because it references System.Runtime.Serialization version 3.0.0.0. For details on compiling without support for WCF data contract serialization, see the article <a href="http://www.jinxbot.net/wiki/index.php?title=Compiling_BNSharp_for_.NET_2.0" target="_blank">Compiling BN# for .NET 2.0.</a></listItem>
        <listItem>IBattleNetSettings now requires a new property, PingType, which allows the connection to attempt to drive a 0ms, -1ms, or standard ping type. Old code will need to add this property to the IBattleNetSettings implementation class. </listItem>
        <listItem>Users now automatically have a Stats property that contains a reference to a class derived from UserStats. This change is breaking and will impact code written for an older CTP release. If using the latest code, this will be compatible with handling code from r15 or newer. </listItem>
        <listItem>The LoginFailed event is no longer prototyped as EventHandler but LoginFailedEventHandler. The LoginFailedEventArgs class contains contextual information about the reason for login failure. </listItem>
    </list>
    </content></section>
    <section address="Section1">
      <title>Non-Breaking Changes</title>
      <content>
    <list class="bullet">
        <listItem>BN# includes the attributes used for data contract serialization as internal, stub attributes that will enable cross-versioning compatbility. For more information, see the article on compiling for .NET 2.0. This also removes the #if !NET_2_0 conditionals wrapping the attribute declarations throughout the data code. </listItem>
        <listItem>BN# now guarantees events are fired in the correct order by creating additional threads and event queues. This should increase the reliability of the order of events when joining a channel, for example. (Previously, joining a channel could cause a user to be listed as joined before the ChannelJoined event fired due to a race condition, which could cause the user to be added to the user list and then removed). </listItem>
        <listItem>Events on a BattleNetClient now have dedicated threads for Normal- and Low-priority event handlers. High-priority events are still executed on the Parse() loop. All Normal-priority event handlers are executed before outstanding Low-priority event handlers are executed. </listItem>
        <listItem>Added a new Position property to the MBNCSUtil DataReader class.</listItem>
        <listItem>Modified the non-Lockdown version of CheckRevision to use approximately 25mb less of memory allocations and reallocations, saving 3-4 gen-0 garbage collections.  The Lockdown version of CheckRevision uses significantly less memory and will be updated in a future version of BN#.</listItem>
        <listItem>Began adding namespace documentation.</listItem>
    </list>
    </content></section>
    <section address="Section1">
      <title>Bug Fixes</title>
      <content>
    <list class="bullet">
        <listItem>Corrected a defect in which a Warcraft 3 statstring would be incorrectly parsed due to a server defect.</listItem>
        <listItem>Corrected the IBattleNetEvents interface and the EventSink interface to expose all events.</listItem>
        <listItem>Comments had been made that the Disconnected event did not always fire correctly.  I believe I have corrected this defect.  If you see it happen, please report it in the 
        	<externalLink><linkText>JinxBot Forums</linkText><linkUri>http://forum.jinxbot.net/</linkUri></externalLink>.</listItem>
    </list>
    </content></section>
    <relatedTopics>
    	<link xlink:href="be596fa1-f125-492b-8dbb-27502e0f2ee9">Current Release Notes</link>
    	<codeEntityReference>T:BNSharp.IBattleNetSettings</codeEntityReference>
    	<codeEntityReference>T:BNSharp.BattleNet.IBattleNetEvents</codeEntityReference>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>