<?xml version="1.0" encoding="utf-8"?>
<topic id="2fc3703a-8ab8-43e0-8011-571432c52303" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <autoOutline />
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>New Features</title>
      <content>
    <list class="bullet">
        <listItem>Support for proxying connections has been enabled.  Proxy support is not included directly in BN#; developers need to implement 
        support for it themselves.  For more information, see the Wiki article <a href="http://www.jinxbot.net/wiki/index.php?title=Proxy_support_in_BNSharp" target="_blank">Proxy support in BN#</a>.
        </listItem>
        <listItem>Support for UTF-8 characters in chat messages has been added.</listItem>
        <listItem>Built-in support has been added for ad messages.</listItem>
        <listItem>Support has been added to set an account's e-mail address during login, or to change
        login credentials during the login process.  To do so, the client no longer automatically 
        disconnects for invalid login credentials; instead, you can use the <b>ContinueLogin</b>
        method once the credentials have been changed.</listItem>
        <listItem>Some support for sanity checking has been implemented in the constructor for 
        <b>BattleNetClient</b>.  It either will throw <see>FileNotFoundException</see> or
        <see>ConfigurationErrorsException</see>; for more information, see the documentation 
        for the constructor.</listItem>
        <listItem>Command queuing now has support; to implement it, see the <see cref="BNSharp.Plugins.ICommandQueue">ICommandQueue interface</see> 
        and the wiki article <a href="http://www.jinxbot.net/wiki/index.php?title=Command_queuing">Command queuing</a>.</listItem>
        <listItem>Added a method to support binary channel join.</listItem>
        <listItem>Added support for joining a predefined home channel upon logging in, instead of joining the default product channel.</listItem>
        <listItem>The ability to change the server on ConnectionBase without reinstantiating the class has been added.  To use it, an overload
        of the Connect method has been added, accepting a name (or IP) and a port.</listItem>
        <listItem>Support for Warcraft III profiles and clan information lookups has been added.  It is 
        still experimental but generally OK.</listItem>
        <listItem>Added a new field to the PingType enumeration, ReplyBeforeVersioning.  When enabled, this will cause a BattleNetClient to wait for
        500ms after the arrival of 0x50 (AuthInfo) for a Ping packet to arrive, and will reply to that first.  This will most likely offer faster 
        ping times as the process will not have to wait for the revision check to complete.</listItem>
        <listItem>The ErrorEventArgs class now has a new member, the Reason property.  The Reason property exposes an enumeration of type ErrorType
        that indicates to the program the reason for the disconnect, allowing developers to handle the error as they see fit.</listItem>
    </list>
      </content>
    </section>
    <section address="Section2">
    	<title>Breaking Changes</title>
    	<content>
    <list class="bullet">
        <listItem>The <see cref="BNSharp.BattleNet.BattleNetClient">BattleNetClient</see> class has been moved out of the <b>BNSharp.Net</b>
        namespace into the more-appropriate <b>BNSharp.BattleNet</b> namespace.</listItem>
        <listItem>The <see cref="BNSharp.IBattleNetSettings">IBattleNetSettings</see> interface has gained the <see cref="BNSharp.IBattleNetSettings.HomeChannel">HomeChannel property</see>.
        Implementing classes will need to provide a concrete implementation, even if it is simply to return a null value.</listItem>
    </list>
    	</content>
    </section>
    <section address="Section2">
    	<title>Non-Breaking Changes</title>
    	<content>
    <list class="bullet">
        <listItem>BN# no longer forces a disconnect when the server fails to prove that it is a legitimate server.</listItem>
        <listItem>Fixed an issue in which a disconnect (for instance, due to Warden or certain instances when a CD key was in use) would not bubble the 
        disconnecting event.</listItem>
    </list>
    	</content>
    </section>
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>